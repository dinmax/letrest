/*! letrest - v0.3.6 - 2016-10-19 */var CONFIG=require("../Config.js").getConfig(),SERVICES=require("../Config.js").getServices(),SECURITY=require("../security/Security.js"),EXPRESS=require("express"),APP=EXPRESS(),MODULE="SERVICE\t",LOG=require("uw-log").newInstance(MODULE),Mapper=function(a){var b=function(){return function(a,b,c){b.header("Access-Control-Allow-Credentials",!0),b.header("Access-Control-Allow-Origin",a.headers.origin),b.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept"),c()}};this.mapService=function(c){c.use(b());for(var d in a.config){var e=a.config[d];LOG.info("Configuring "+d.toUpperCase()+" service for "+e.method+" method");var f=require("path"),g=SECURITY.secure({},e);if("static"==e.method){LOG.info("- Setting static path at '"+e.path+"' for static directory '"+e.directory+"'");var h=f.dirname(require.main.filename)+e.directory,i=require("fs").readdirSync(h);c.get(e.path,g,function(a,b){for(var c="",d=0;d<i.length;d++)c=c+"- "+i[d]+"<br/>";b.send(c)}),c.use(e.path,g,EXPRESS.static(h))}else{try{var j=require(f.dirname(require.main.filename)+"/"+e.file)}catch(a){LOG.warning("- Service's file does not exits =>",f.dirname(require.main.filename)+"/"+e.file);continue}var k=j[e.entry];k?(LOG.info("- Setting method '"+e.method+"' at path '"+e.path+"' for file "+e.file+"=>"+e.entry),c.route(e.path)[e.method](g,k)):LOG.warning("- Library "+e.file+" does not containd method =>",e.entry)}}}};exports.config=function(a){LOG.info("Configuring REST services");for(var b in SERVICES){LOG.info("Defining services",b);var c=SERVICES[b];new Mapper(c).mapService(a)}};