/*! letrest - v0.3.7 - 2017-02-09 */"use strict";angular.module("LetRestEditor",["ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.router","ui.bootstrap","dialogs.main"]).config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/entity"),a.state("entities",{url:"/entity",templateUrl:"views/entities/main.html",controller:"EntitiesCtrl as Entities"}).state("entities.edit",{url:"/:entity",templateUrl:"views/entities/entity.html"}).state("wizard",{url:"/wizard",templateUrl:"views/wizard/wizard.html",controller:"EntityWizardCtrl as EntityWizard"})}]).constant("K",{ENTITIES_URL:"http://localhost:8001/api/entities/",TABLES_URL:"http://localhost:8001/api/tables/"}),angular.module("LetRestEditor").directive("customValidation",["$parse",function(a){return{require:"ngModel",link:function(b,c,d,e){var f=d.customValidation;f instanceof Object==0&&(f={name:"customValidation",callback:f});var g=f;g instanceof Array==0&&(g=[f]),angular.forEach(g,function(c){e.$validators[c.name]=function(d,f){if(e.$isEmpty(d))return!0;var g=a(c.callback);return g(b)(f)}},this)}}}]),angular.module("LetRestEditor").controller("DimensionCtrl",["$scope","dialogs","ParserService",function(a,b,c){selection=null;var d=a.Entities,e=d.selection.table,f=["key","keyOriginal"];this.dimensions=d.selection.service.all.group.dimensions,this.isKeyValid=function(a){return void 0===this.dimensions[a]},this.select=function(a,b){this.tables=d.getSelectionTables(),this.selection=angular.copy(a),this.selection.key=b,this.selection.keyOriginal=this.selection.key,this.selection.field=c.parseTableRef(this.selection.field,e),this.selection.attribute=this.selection.attribute||this.selection.key},this.remove=function(a){var c=function(){delete this.dimensions[a],d.save()}.bind(this),e=b.confirm("Please Confirm","Are you sure you want to remove the <strong>"+a+"</strong> dimension? This operation can´t be undone");e.result.then(c)},this.add=function(a){this.select({attribute:a},a)},this.save=function(){this.selection.field=this.selection.field.table+"."+this.selection.field.field,this.dimensions[this.selection.key]=this.selection,angular.forEach(this.selection,function(a,b){f.indexOf(b)>=0&&delete this.selection[b]},this),console.log(this.selection),d.save(),this.cancel()},this.cancel=function(){this.selection=null}}]),angular.module("LetRestEditor").controller("EntitiesCtrl",["$scope","$state","EntitiesService","DatabaseService","dialogs",function(a,b,c,d,e){this.selection=null,this.serviceHelper=null,this.entities=c.list,this.tables=d.all,this.tabsSelected="general",this.selectTab=function(a){this.tabSelected=a},this.isTabSelected=function(a){if(a instanceof Array)for(var b=0;b<a.length;b++)if(this.isTabSelected(a[b]))return!0;return this.tabSelected===a},this.getService=function(){return this.selection.service[this.tabSelected]},this.getServiceFilters=function(){var a=this.getService();return a?a.filter||(a.filter=[]):void 0};var f=function(){this.serviceHelper={all:void 0!==this.selection.service.all,get:void 0!==this.selection.service.get,post:void 0!==this.selection.service.post,put:void 0!==this.selection.service.put,delete:void 0!==this.selection.service.delete}}.bind(this);this.select=function(a){this.selection=angular.copy(a),f(),b.go("entities.edit",{entity:a.name})},this.getSelectionTables=function(){var a={};return a[this.selection.table]=angular.copy(this.tables[this.selection.table]),angular.forEach(this.selection.fk,function(b){var c=b.relation.split("@")[1],d=angular.copy(this.tables[c]);b.alias&&(d.name=b.alias),a[d.name]=d}.bind(this)),a},this.isAList=function(a){return a instanceof Array},this.toggleService=function(a){var b=!this.serviceHelper[a];if(b)this.selection.service[a]={};else{var c=function(){delete this.selection.service[a],this.save()}.bind(this),d=function(){this.serviceHelper[a]=!0}.bind(this),f=e.confirm("Please Confirm","Are you sure you want to remove the <strong>"+a+"</strong> service? This operation can´t be undone");f.result.then(c,d)}},this.hasService=function(a){return this.serviceHelper[a]},this.save=function(a){a=a||this.selection,c.save(a)},c.sync()}]),angular.module("LetRestEditor").controller("FKCtrl",["$scope","dialogs",function(a,b){selection=null;var c={comparator:"=",jointype:"INNER",source:a.Entities.selection.table},d=["_name","name","table","tablefield"];this.select=function(a,b){var d=angular.copy(b);d.name=d._name=a;var e=b.relation&&b.relation.split("@")||[];d.table=e[1],d.tablefield=e[0],d.field&&-1!==d.field.indexOf(".")&&(d.field=d.field.split(".")[1]),this.selection=angular.extend({},c,d)},this.isNameUnique=function(b){return this.selection._name===b||!a.Entities.selection.fk[b]}.bind(this),this.getSourceTables=function(){var b=[];return b.push(c.source),this.selection.table&&b.push(this.selection.table),angular.forEach(a.Entities.selection.fk,function(a){a.relation&&b.push(a.relation.split("@")[1])}),b},this.create=function(){this.select(null,{type:"url"})},this.save=function(){this.selection.relation=this.selection.tablefield+"@"+this.selection.table;var b=this.selection.name,e=this.selection._name;angular.forEach(d,function(a){delete this.selection[a]}.bind(this)),angular.forEach(c,function(a,b){this.selection[b]==c[b]&&delete this.selection[b]}.bind(this)),delete a.Entities.selection.fk[e],a.Entities.selection.fk[b]=this.selection,a.Entities.save(),this.cancel()},this.remove=function(c){var d=b.confirm("Please Confirm","Are you sure of removing the <strong>"+c+"</strong> FK?");d.result.then(function(){delete a.Entities.selection.fk[c],a.Entities.save()},function(){})},this.cancel=function(){this.selection=null}}]),angular.module("LetRestEditor").controller("FilterCtrl",["$scope","dialogs","ParserService",function(a,b,c){selection=null;var d=a.Entities,e=d.selection.table,f={source:"path",comparator:"like"},g=["fields","values"];this.getFilters=d.getServiceFilters.bind(d),this.getAttrOrDefault=function(a,b){return a[b]||f[b]},this.select=function(a){this.tables=d.getSelectionTables();var b=angular.copy(a);b.values=a.value,b.values&&b.values instanceof Array==0&&(b.values=[b.values]),b.fields=c.parseTableRef(a.field,e),b.fields&&b.fields instanceof Array==0&&(b.fields=[b.fields]),b.type=a.type||"string",this.selection=angular.extend({},f,b)},this.removeFilter=function(a){var c=function(){this.getFilters().splice(a,1),d.save()}.bind(this),e=b.confirm("Please Confirm","Are you sure you want to remove the <strong>"+this.getFilters()[a].key+"</strong> filter? This operation can´t be undone");e.result.then(c)},this.addFilter=function(a){this.select({key:a}),this.addField()},this.removeField=function(a){var c=function(){this.selection.fields.splice(a,1),this.selection.values.splice(a,1),d.save()}.bind(this),e=b.confirm("Please Confirm","Are you sure you want to remove the <strong>"+this.selection.fields[a].key+"</strong> field? This operation can´t be undone");e.result.then(c)},this.addField=function(){this.selection.fields||(this.selection.fields=[]),this.selection.fields.push({table:"",field:""}),this.selection.values||(this.selection.values=[]),this.selection.values.push("")},this.save=function(){if(1==this.selection.fields.length)this.selection.field=this.selection.fields[0].table+"."+this.selection.fields[0].field,this.selection.value=this.selection.values[0];else{this.selection.field=[],this.selection.value=[];for(var a=0;a<this.selection.fields.length;a++){var b=this.selection.fields[a],c=this.selection.values[a];this.selection.field.push(b.table+"."+b.field),this.selection.value.push(c)}}this.getFilters().push(this.selection),angular.forEach(g,function(a){delete this.selection[a]},this),angular.forEach(f,function(a,b){this.selection[b]==f[b]&&delete this.selection[b]},this),console.log(this.selection),this.cancel()},this.cancel=function(){this.selection=null}}]),angular.module("LetRestEditor").controller("MappingCtrl",["$scope","dialogs",function(a,b){selection=null;var c=a.Entities,d=(c.tables,c.selection.table),e=c.selection.mapping,f={},g=["table","tablefield","index"];this.isNameUnique=function(a){return!e.some(function(b,c){return c!=this.selection.index&&b.attribute===a}.bind(this))}.bind(this),this.select=function(a,b){if(this.tables=c.getSelectionTables(),this.selection=angular.copy(b),this.selection.index=a>=0?a:c.selection.mapping.length,this.selection.field){var e=this.selection.field.split("@");1==e.length&&e.push(d),this.selection.table=e[1],this.selection.tablefield=e[0]}this.selection.type=this.selection.type||"string"},this.save=function(){this.selection.field=this.selection.tablefield+"@"+this.selection.table;var a=this.selection.index;angular.forEach(g,function(a){delete this.selection[a]},this),angular.forEach(f,function(a,b){this.selection[b]==f[b]&&delete this.selection[b]},this),e[a]=this.selection,c.save(),this.cancel()},this.create=function(){this.select(-1,{})},this.remove=function(a){var d=b.confirm("Please Confirm","Are you sure of removing the Mapping?");d.result.then(function(){e.splice(a,1),c.save()})},this.cancel=function(){this.selection=null}}]),angular.module("LetRestEditor").controller("MeasureCtrl",["$scope","dialogs","ParserService",function(a,b){selection=null;var c=a.Entities,d=(c.selection.table,["key","keyOriginal"]);this.measures=c.selection.service.all.group.measures,this.useGenerator=!1,this.isKeyValid=function(a){return void 0===this.measures[a]},this.select=function(a,b){this.tables=c.getSelectionTables(),this.selection=angular.copy(a),this.selection.key=b,this.selection.keyOriginal=this.selection.key,this.selection.attribute=this.selection.attribute||this.selection.key},this.remove=function(a){var d=function(){delete this.measures[a],c.save()}.bind(this),e=b.confirm("Please Confirm","Are you sure you want to remove the <strong>"+a+"</strong> measure? This operation can´t be undone");e.result.then(d)},this.add=function(a){this.select({attribute:a},a)},this.parseGenerator=function(a){var b=[a.distinct?"DISTINCT ":"",a.operation,"(",a.table,".",a.field,")"];return b.join("")},this.save=function(){this.selection.field=this.selection.field.table+"."+this.selection.field.field,this.measures[this.selection.key]=this.selection,angular.forEach(this.selection,function(a,b){d.indexOf(b)>=0&&delete this.selection[b]},this),console.log(this.selection),c.save(),this.cancel()},this.cancel=function(){this.selection=null,this.useGenerator=!1}}]),angular.module("LetRestEditor").controller("OrderCtrl",["$scope","dialogs","ParserService",function(a,b,c){selection=null;var d=a.Entities,e=d.selection.table;this.orders=d.selection.service.all.order;var f={},g=["fields","values"];this.isFieldUnique=function(){return this.selection.fields.length<=1||void 0}.bind(this),this.select=function(a,b){this.tables=d.getSelectionTables();var f={};f.original=a,f.key=a,b&&(f.fields=c.parseOrder(b,e),f.fields instanceof Array==0&&(f.fields=[f.fields])),this.selection=f},this.removeOrder=function(a){var c=function(){delete this.orders[a],d.save()}.bind(this),e=b.confirm("Please Confirm","Are you sure you want to remove the <strong>"+a+"</strong> order? This operation can´t be undone");e.result.then(c)},this.addOrder=function(a){this.select(a),this.addField()},this.removeField=function(a){var c=function(){this.selection.fields.splice(a,1),d.save()}.bind(this),e=b.confirm("Please Confirm","Are you sure you want to remove the <strong>"+this.selection.fields[a].key+"</strong> field? This operation can´t be undone");e.result.then(c)},this.addField=function(){this.selection.fields||(this.selection.fields=[]),this.selection.fields.push({table:"",field:"",type:"ASC"})};var h={};this.getFields=function(a,b){return h[a]||(h[a]=c.parseOrder(b,e)),h[a]},this.save=function(){for(var a=[],b=0;b<this.selection.fields.length;b++){var c=this.selection.fields[b];a.push(c.table+"."+c.field+" "+c.type)}this.orders[this.selection.original]=null,this.orders[this.selection.key]=a.join(","),h[this.selection.key]=null,angular.forEach(g,function(a){delete this.selection[a]},this),angular.forEach(f,function(a,b){this.selection[b]==f[b]&&delete this.selection[b]},this),console.log(this.selection),d.save(),this.cancel()},this.cancel=function(){this.selection=null}}]),angular.module("LetRestEditor").controller("PrePostActionsCtrl",["$scope","ParserService",function(a,b){var c=a.Entities,d=c.getService();console.log("PrePostActionsCtrl called"),this.files=[{name:"dummy/file01.js",methods:["doSomething","doAnotherThing","doNothing"]},{name:"dummy/file02.js",methods:["doCrazy","doYourBest","doTheTask"]},{name:"fact/shortcuts.js",methods:["shortcuts"]},{name:"post/mapping.js",methods:["doMapping","insertMapping"]}],this.getMethods=function(a){for(var b=0;b<this.files.length;b++)if(this.files[b].name==a)return this.files[b].methods},this.pre=b.parseActions(d.pre),this.post=b.parseActions(d.post),this.save=function(){this.pre.file||(d.pre=""),this.pre.file&&this.pre.method&&(d.pre=this.pre.method+"@"+this.pre.file),this.post.file||(d.post=""),this.post.file&&this.post.method&&(d.post=this.post.method+"@"+this.post.file),c.save()}}]),angular.module("LetRestEditor").filter("mappingAttribute",function(){return function(a){return a.replace("@",".")}}),angular.module("LetRestEditor").filter("renderFkField",function(){return function(a,b){var c="";return a.source!==b&&(c+=a.source+"."),c+a.field}}),angular.module("LetRestEditor").factory("DatabaseService",["K","$http",function(a,b){var c={};return c.all={},c.list=[],c.sync=function(){return b.get(a.TABLES_URL).then(function(a){var b=[];angular.copy(a.data,c.all),angular.forEach(a.data,function(a){b.push(a)}),angular.copy(b,c.list)}).catch(function(a){console.log(a)})},c.getTable=function(a){return c.all[a]},c.sync(),c}]),angular.module("LetRestEditor").factory("EntitiesService",["K","$http",function(a,b){function c(){var a=[];angular.forEach(d.all,function(b){a.push(b)}),angular.copy(a,d.list)}var d={};return d.all={},d.list=[],d.sync=function(){return console.log(a.ENTITIES_URL),b.get(a.ENTITIES_URL).then(function(a){angular.copy(a.data,d.all),c()}).catch(function(a){console.log(a)})},d.save=function(a){d.all[a.name]=a,c()},d.isNameValid=function(a){return void 0===d.all[a]},d.isPathValid=function(a){for(var b in d.all)if(d.all[b].path===a)return!1;return!0},d.sync(),d}]),angular.module("LetRestEditor").factory("ParserService",function(){var a={};return a.populateKeys=function(a,b){var c=b||"key";return angular.forEach(a,function(a,b){a[c]=b},this),a},a.parseTableRef=function(b,c){if(b){if(b instanceof Array){var d=[];return b.forEach(function(b){d.push(a.parseTableRef(b,c))}),d}var e=b.split(".");return 1===e.length?{table:c,field:e[0].trim(),raw:b}:{table:e[0].trim(),field:e[1].trim(),raw:b}}},a.parseOrder=function(b,c){var d=b.split(",");if(d.length>1){var e=[];return d.forEach(function(b){e.push(a.parseOrder(b,c))}),e}var f=a.parseTableRef(b,c),g=f.field.split(" ");return 1===g.length?f.type="ASC":(f.field=g[0],f.type=g[1]),f},a.parseActions=function(a){return a?{file:a.split("@")[1],method:a.split("@")[0]}:{}},a.getPk=function(a){var b;return angular.forEach(a,function(a){b||a.pk&&(b=a)}),b.name},a.getFks=function(a){var b={};return angular.forEach(a,function(a){a.fk&&(b[a.name]={relation:a.name+"@"+a.fktable,field:a.name,type:"object",value:a.fktable+"."+a.name,_selected:!1,_raw:a})},this),b},a.initMapping=function(a,b){var c=[];return angular.forEach(a,function(a){c.push({field:a.name+(a.fktable?"@"+a.fktable:""),attribute:(b?b+".":"")+(a.pk&&"id"||a.name),external:a.pk||a.fk,_selected:!1,_table:b})},this),c},a.parseTableToEntity=function(b){var c={name:b.name,path:"/"+b.name,table:b.name,pk:a.getPk(b.fields),fk:a.getFks(b.fields),mapping:a.initMapping(b.fields),service:{},_raw:b};return c},a.getCleanObject=function(b,c){var d=b;return c||(d=angular.copy(b)),angular.forEach(d,function(b,c){"string"==typeof c&&0===c.indexOf("_")&&delete d[c],d[c]instanceof Object&&(d[c]=a.getCleanObject(d[c],!0))},this),d},a}),angular.module("LetRestEditor").controller("WizardCtrl",["$scope","EntitiesService",function(a){this.defaultActions=[{text:"Previous",action:"previous",state:"",where:"left"},{text:"Next",action:"next",state:"",where:"right"},{text:"Done",action:"finish",state:"",where:"right"}];var b=a.EntityWizard;this.steps=b.steps,this.step=this.steps[0],this.stepIndex=0,this.goNext=function(){this.stepIndex!==this.steps.length-1&&(this.stepIndex++,this.step=this.steps[this.stepIndex])},this.goPrevious=function(){0!==this.stepIndex&&(this.stepIndex--,this.step=this.steps[this.stepIndex])},this.doFinish=function(){b.save(),this.stepIndex=0,this.step=this.steps[0]},this.doCancel=function(){},this.isEnabled=function(a){switch(a.action){case"next":return this.stepIndex<1||b.newEntity;case"finish":return b.isEntityValid();default:return!0}},this.isVisible=function(a){switch(a.action){case"previous":return this.stepIndex>0;case"next":return this.stepIndex<this.steps.length-1;case"finish":return this.stepIndex===this.steps.length-1;default:return!0}},this.executeAction=function(a){switch(a.action){case"next":this.goNext();break;case"previous":this.goPrevious();break;case"finish":this.doFinish();break;case"cancel":this.doCancel()}}}]),angular.module("LetRestEditor").controller("EntityWizardCtrl",["$scope","DatabaseService","EntitiesService","ParserService",function(a,b,c,d){function e(a,b,c){if("string"==typeof c)var c=c.split(".");if(c.length>1){var d=c.shift();(null==a[d]||"object"!=typeof a[d])&&(a[d]={}),e(a[d],b,c)}else a[c[0]]=b}this.steps=[{name:"start",title:"Start",url:"views/wizard/steps/welcome.html",actions:this.defaultActions},{name:"table",title:"Table",url:"views/wizard/steps/table.html",actions:this.defaultActions},{name:"relations",title:"Relations",url:"views/wizard/steps/relations.html",actions:this.defaultActions},{name:"mappings",title:"Mappings",url:"views/wizard/steps/mappings.html",actions:this.defaultActions},{name:"services",title:"Services",url:"views/wizard/steps/services.html",actions:this.defaultActions},{name:"name",title:"Name it",url:"views/wizard/steps/name.html",actions:this.defaultActions}],this.tables=b.all,this.isNameValid=function(a){return c.isNameValid(a)},this.isPathValid=function(a){return 0===a.indexOf("/")&&c.isPathValid(a)},this.isEntityValid=function(){return this.newEntity&&this.isNameValid(this.newEntity.name)},this.getEntityFromTable=function(a){return"string"==typeof a&&(a=b.getTable(a)),d.parseTableToEntity(a)},this.select=function(a){this.newEntity=this.getEntityFromTable(a),this.groupMappingByTable()},this.getCleanEntity=function(){return d.getCleanObject(this.newEntity)},this.toArray=function(a){return Object.keys(a)},this.includeAllServices=function(){angular.forEach(["all","get","post","put","delete"],function(a){this.newEntity.service[a]=!0},this)},this.getMapper=function(){var a={};return angular.forEach(this.newEntity.mapping,function(b){b._selected&&e(a,"foo",b.attribute)},this),a},this.getRelatedTables=function(){var a=[];return angular.forEach(this.newEntity.fk,function(c){c._selected&&a.push({name:c._raw.fktable,fields:d.parseTableToEntity(b.getTable(c._raw.fktable)).mapping})},this),a},this.updateFk=function(a){var c=a._raw.name;if(a._selected){var e=b.getTable(a._raw.fktable),f=d.getFks(e.fields);this.newEntity.fk[c]=a,angular.forEach(f,function(a,b){a._parent=c,this.newEntity.fk[b]=a},this)}else a._parent&&this.newEntity.fk[c]?delete this.newEntity.fk[a._raw.name]:angular.forEach(this.newEntity.fk,function(a,b){a._parent===c&&(a._selected=!1,this.updateMapping(a),delete this.newEntity.fk[b])},this);this.updateMapping(a)},this.updateMapping=function(a){if(a._selected){var c=b.getTable(a._raw.fktable),e=d.initMapping(c.fields,c.name);this.newEntity.mapping.push.apply(this.newEntity.mapping,e)}else this.newEntity.mapping=this.newEntity.mapping.filter(function(b){return b._table!==a._raw.fktable});this.groupMappingByTable()},this.groupMappingByTable=function(){var a=this.newEntity._mappingByTable={};angular.forEach(this.newEntity.mapping,function(b){var c=b._table||this.newEntity.table;a[c]=a[c]||[],a[c].push(b)},this)},this.toggleMappingsHelper=!1,this.initToggleMappingsHelper=function(){var a=!0;angular.forEach(this.newEntity.mapping,function(b){a&&(a=b._selected)},this),this.toggleMappingsHelper=a},this.toggleMappings=function(){angular.forEach(this.newEntity.mapping,function(a){a._selected=this.toggleMappingsHelper},this)},this.tableHasRelations=function(){return Object.keys(this.newEntity.fk).length>0},this.initNaming=function(){this.updatePath()},this.updatePath=function(){this.chooseName.inputPath.$pristine&&(this.newEntity.path="/"+(this.newEntity.name||""))},this.save=function(){c.save(this.getCleanEntity()),delete this.newEntity}}]);