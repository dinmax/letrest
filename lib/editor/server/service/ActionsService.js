/*! letrest - v0.3.2 - 2016-06-07 */function getAllMethods(a){return Object.getOwnPropertyNames(a).filter(function(b){return"function"==typeof a[b]})}function walkFiles(a){var b=[];return readdirAsync(a).map(function(c){return c=path.join(a,c),statAsync(c).then(function(a){if(a.isFile()&&/.js$/.test(c)){var d=require(c),e={name:c.replace(BASEPATH,""),methods:getAllMethods(d)};return b.push(e)}return walkFiles(c).then(function(a){b=b.concat(a)})})}).then(function(){return b})}function getActions(a){walkFiles(actionpath).then(function(b){a.send(b)})["catch"](function(b){LOG.error(MODULE,"Failed to obtain the actions from the given path."),a.status(503).send(b)})}function getServices(a){walkFiles(servicepath).then(function(b){a.send(b)})["catch"](function(b){LOG.error(MODULE,"Failed to obtain the actions from the given path."),a.status(503).send(b)})}var MODULE="Entities Service | ",LOG=require("uw").log,PATH=require("path"),BASEPATH=PATH.dirname(process.mainModule.filename),CONFIG_PATH=BASEPATH+"/../config/letrest/config.json",CONFIG=require(CONFIG_PATH),moment=require("moment"),fs=require("fs"),actionpath=BASEPATH+"/"+CONFIG.path.actions,servicepath=BASEPATH+"/"+CONFIG.path.services,fs=require("fs"),path=require("path"),Promise=require("bluebird"),readdirAsync=Promise.promisify(fs.readdir),statAsync=Promise.promisify(fs.stat);module.exports.allactions=function(a,b){getActions(b)},module.exports.allservices=function(a,b){getServices(b)};