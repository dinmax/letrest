/*! letrest - v0.1.1 - 2016-04-06 */function requireUncached(a){return delete require.cache[require.resolve(a)],require(a)}var MODULE="Entities Service | ",LOG=require("uw").log,PATH=require("path"),ENTITY_PATH=PATH.dirname(process.mainModule.filename)+"/../config/letrest/entities/",SCHEMA_PATH=PATH.dirname(process.mainModule.filename)+"/../config/letrest/schemas/",SECURITY_PATH=PATH.dirname(process.mainModule.filename)+"/../config/letrest/security/config.json",CONFIG_PATH=PATH.dirname(process.mainModule.filename)+"/../config/letrest/config.json",CRUDS_PATH=PATH.dirname(process.mainModule.filename)+"/../config/letrest/crud/",moment=require("moment"),fs=require("fs"),getEntities=function(){var a={};LOG.info(MODULE,"Reading entities.");for(var b=require("fs").readdirSync(ENTITY_PATH),c=0;c<b.length;c++)if(".json"==b[c].substr(b[c].length-5)){LOG.info(MODULE,"Processing entity file",b[c]);var d=requireUncached(ENTITY_PATH+b[c]);d.name!=b[c].replace(".json","")&&LOG.warn(MODULE,"Entity Definition name not match file name =>",b[c]),a[d.name]=d}else LOG.warn(MODULE,"Skipping file "+b[c]);return a},startsWithUntil=function(a,b,c){return 0==c.lastIndexOf(a,0)&&c.lastIndexOf(b)==a.length},saveEntity=function(a){return a.schema&&(saveWithBackup(a.name,a.schema,SCHEMA_PATH,"SAVING SCHEMA: "),a.schema=null),saveWithBackup(a.name,a,ENTITY_PATH,"SAVING ENTITY: ")},mkdirSync=function(a){try{fs.mkdirSync(a)}catch(b){if("EEXIST"!=b.code)throw b}},createFolder=function(a){var b=a+"/back",c=b+"/"+moment().format("YYYYMMDD");return mkdirSync(b),mkdirSync(c),c},saveWithBackup=function(a,b,c,d){if(a){var e=a;LOG.info(MODULE,d+e);var f=createFolder(c),g=c+"/"+e+".json";if(fs.existsSync(g)){var h=f+"/"+e+"_"+moment().format("hhmmss")+".json";fs.rename(g,h)}return fs.writeFileSync(g,JSON.stringify(b,null,"	"))}return-1};module.exports.allservice=function(a,b){b.send(getEntities())},module.exports.saveservice=function(a,b){b.send(saveEntity(a.body))};