/*! letrest - v0.0.30 - 2015-06-02 */var CONFIG=require("../Config.js").getConfig(),ENTITIES=require("../Config.js").getEntities(),STRATEGY=require(CONFIG.strategy),SCHEMA=require("../schema/Schema.js"),SECURITY=require("../security/Security.js"),PROTOCOL=require("../protocol/Protocol.js"),DB=require("uw").DB,LOG=require("uw").log,Q=require("q"),UTIL=require("util"),MODULE="REST		",Mapper=function(a){var b=function(b){if(!a.notUseToken&&!b.letrest.session)throw new Error("Not a valid token session. This should not happened")},c=function(a){var b=Q.defer();try{b.resolve(a.pre(a.entity,a))}catch(c){LOG.info(MODULE,"Failed to execute pre-aggregate function"),b.reject(c)}return b.promise},d=function(a){var b=Q.defer();try{b.resolve(a.post(a.entity,a.arr,a))}catch(c){LOG.info(MODULE,"Failed to execute post-aggregate function"),b.reject(c)}return b.promise},e=function(a,b){return b},f=function(a,b,c){return c},g=function(a){a.res.send(PROTOCOL.success(a.entity,a.mode,a.arr))},h=function(a,b){var c=PROTOCOL.getError(b);a.res.status(c.code).send(c)},i=function(a,i,j){this.service=function(k,l){LOG.info(MODULE,"Executing ALL request for entity =>",a.table);try{b(k),k.pre=i||e,k.post=j||f,k.entity=a,k.mode="all",k.res=l,c(k).then(STRATEGY.select).then(d).then(g)["catch"](function(a){console.log(a),h(k,a)})}catch(m){LOG.error(MODULE,"Failed to validate session.",m.toString()),l.status(500).send(PROTOCOL.serverError(m))}}},j=function(a,i,j){this.service=function(k,l){LOG.info(MODULE,"Executing GET request for entity =>",a.table);try{b(k),k.pre=i||e,k.post=j||f,k.entity=a,k.mode="get",k.res=l,c(k).then(STRATEGY.select).then(function(a){if(0==a.arr.length)throw a.res.status(404).send(PROTOCOL.notFound()),new Error("");return d(a)}).then(g)["catch"](function(a){h(k,a)})}catch(m){LOG.error(MODULE,"Failed to process query",m),l.send(500,PROTOCOL.serverError(m))}}},k=function(a,i,j){this.service=function(k,l){LOG.info(MODULE,"Executing POST request for entity =>",a.table);try{b(k),k.pre=i||e,k.post=j||f,k.entity=a,k.mode="post",k.res=l;var m=SCHEMA.validate(a,k.body);LOG.verbose(MODULE,"Validation result",m),m.errors.length>0?l.status(400).send(PROTOCOL.validationError(m.errors)):c(k).then(STRATEGY.insert).then(d).then(g)["catch"](function(a){h(k,a)})}catch(n){LOG.error(MODULE,"Failed to process query because of =>",n.toString()),l.status(500).send(PROTOCOL.serverError(n))}}},l=function(a,b,i){this.service=function(j,k){LOG.info(MODULE,"Executing PUT request for entity =>",a.table);try{j.pre=b||e,j.post=i||f,j.entity=a,j.mode="put",j.res=k;var l=SCHEMA.validate(a,j.body);l.errors.length>0?k.send(400,PROTOCOL.validationError(l.errors)):c(j).then(STRATEGY.update).then(d).then(g)["catch"](function(a){h(j,a)})}catch(m){LOG.error(MODULE,"Failed to validate session.",m);var n=PROTOCOL.serverError(m);k.status(n.code).send(n.msg)}}},m=function(a,b,i){this.service=function(j,k){LOG.info(MODULE,"Executing DELETE request for entity =>",a.table);try{j.pre=b||e,j.post=i||f,j.entity=a,j.mode="delete",j.res=k,c(j).then(STRATEGY["delete"]).then(d).then(g)["catch"](function(a){h(j,a)})}catch(l){LOG.error(MODULE,"Failed to process query ->",l.toString()),k.send(500,PROTOCOL.serverError(l))}}};this.createPath=function(b){if(-1!==a.path.indexOf("/",a.path.length-1))throw new Error('The service path should not end with a "/"');switch(b){case"all":return a.path;case"post":return a.path+"/";case"put":case"get":case"delete":return a.path+"/"+CONFIG.pk_template}},this.map=function(b){var c=require("path"),d={all:i,get:j,post:k,put:l,"delete":m};for(var e in a.service){LOG.info(MODULE,"- Configuring %s service",e.toUpperCase());var f=this.createPath(e),g=null,h=null;if(a.service[e].pre){var n=a.service[e].pre.split("@");LOG.info(MODULE,"	- Mapping pre message '%s' in '%s'",n[0],n[1]),g=require(c.dirname(require.main.filename)+"/"+n[1])[n[0]]}if(a.service[e].post){var n=a.service[e].post.split("@");LOG.info(MODULE,"	- Mapping post message '%s' in '%s'",n[0],n[1]),h=require(c.dirname(require.main.filename)+"/"+n[1])[n[0]]}var o=e;"all"==o&&(o="get"),b.route(f)[o](SECURITY.secure(a,a.service[e].weight),new d[e](a,g,h).service)}}};exports.config=function(a){LOG.info(MODULE,"Configuring REST services");for(var b in ENTITIES){LOG.info(MODULE,"Mapping entity",b);var c=ENTITIES[b];new Mapper(c).map(a)}};