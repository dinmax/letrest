/*! letrest - v0.0.10 - 2015-02-10 */var CONFIG=require("../Config.js").getConfig(),ENTITIES=require("../Config.js").getEntities(),STRATEGY=require(CONFIG.strategy),SCHEMA=require("../schema/Schema.js"),SECURITY=require("../security/Security.js"),PROTOCOL=require("../protocol/Protocol.js"),DB=require("uw").DB,LOG=require("uw").log,Q=require("q"),UTIL=require("util"),MODULE="REST		",Mapper=function(a){var b=function(a){if(!a.letrest.session)throw new Error("Not a valid token session. This should not happened")},c=function(a,c,d){this.service=function(e,f){LOG.info(MODULE,"Executing ALL request for entity =>",a.table);try{b(e),c&&(LOG.info(MODULE,"	Executing PRE message"),c(a,e)),d||(d=function(a,b){return b}),STRATEGY.select(a,e.params,"all",null,e.query,e.letrest.session).then(function(b){f.send(PROTOCOL.success(a,"all",d(a,b,e)))})["catch"](function(a){LOG.error(MODULE,"Failed to process query",a.toString()),f.status(500).send(PROTOCOL.dataError())})}catch(g){LOG.error(MODULE,"Failed to process query.",g.toString()),f.status(500).send(PROTOCOL.serverError(g))}}},d=function(a,c,d){this.service=function(e,f){LOG.info(MODULE,"Executing GET request for entity =>",a.table);try{b(e),c&&(LOG.info(MODULE,"	Executing PRE message"),c(a,e)),d||(d=function(a,b){return b}),STRATEGY.select(a,e.params,"get",null,e.query,e.letrest.session).then(function(b){0==b.length?f.send(404,PROTOCOL.notFound()):f.send(PROTOCOL.success(a,"get",d(a,b[0],e)))})["catch"](function(){LOG.error(MODULE,"Failed to process query",g),f.send(500,PROTOCOL.dataError())})}catch(g){LOG.error(MODULE,"Failed to process query",g),f.send(500,PROTOCOL.serverError(g))}}},e=function(a,c,d){this.service=function(e,f){LOG.info(MODULE,"Executing POST request for entity =>",a.table);try{b(e),c&&(LOG.info(MODULE,"	Executing PRE message"),c(a,e)),d||(d=function(a,b){return b});var g=SCHEMA.validate(a,e.body);LOG.verbose(MODULE,"Validation result",g),g.errors.length>0?f.send(400,PROTOCOL.validationError(g.errors)):(LOG.verbose(MODULE,"Preparing query"),STRATEGY.insert(a,e.params,"post",e.body,null,e.letrest.session).then(function(b){console.log(b),LOG.verbose(MODULE,"Successfully inserted entity",b),f.send(PROTOCOL.success(a,"post",d(a,b)))})["catch"](function(a){LOG.error(MODULE,a.toString()),f.send(500,PROTOCOL.dataError())}))}catch(h){LOG.error(MODULE,"Failed to process query because of =>",h.toString()),f.send(500,PROTOCOL.serverError(h))}}},f=function(a,b,c){this.service=function(d,e){LOG.info(MODULE,"Executing PUT request for entity =>",a.table);try{b&&(LOG.info(MODULE,"	Executing PRE message"),b(a,d)),c||(c=function(a,b){return b});var f=SCHEMA.validate(a,d.body);f.errors.length>0?e.send(400,PROTOCOL.validationError(f.errors)):STRATEGY.update(a,d.params,"put",d.body,d.query,d.letrest.session).then(function(b){e.send(PROTOCOL.success(a,"put",c(a,b,d)))})["catch"](function(){LOG.error(MODULE,"Failed to update entity",g),e.send(500,PROTOCOL.dataError())})}catch(g){LOG.error(MODULE,"Failed to process query",g),e.send(500,PROTOCOL.serverError(g))}}},g=function(a,b,c){this.service=function(d,e){LOG.info(MODULE,"Executing DELETE request for entity =>",a.table);try{b&&(LOG.info(MODULE,"	Executing PRE message"),b(a,d)),c||(c=function(a,b){return b}),STRATEGY["delete"](a,d.params,"delete",d.body,d.letrest.session).then(function(b){e.send(PROTOCOL.success(a,"delete",c(a,b,d)))})["catch"](function(a){a?(LOG.error(MODULE,"Failed to delete entity",f),e.send(500,PROTOCOL.dataError())):e.send(404,PROTOCOL.notFound())})}catch(f){LOG.error(MODULE,"Failed to process query ->",f.toString()),e.send(500,PROTOCOL.serverError(f))}}};this.createPath=function(b){if(-1!==a.path.indexOf("/",a.path.length-1))throw new Error('The service path should not end with a "/"');switch(b){case"all":return a.path;case"post":return a.path+"/";case"put":case"get":case"delete":return a.path+"/"+CONFIG.pk_template}},this.map=function(b){var h=require("path"),i={all:c,get:d,post:e,put:f,"delete":g};for(var j in a.service){LOG.info(MODULE,"- Configuring %s service",j.toUpperCase());var k=this.createPath(j),l=null,m=null;if(a.service[j].pre){var n=a.service[j].pre.split("@");LOG.info(MODULE,"	- Mapping pre message '%s' in '%s'",n[0],n[1]),l=require(h.dirname(require.main.filename)+"/"+n[1])[n[0]]}if(a.service[j].post){var n=a.service[j].post.split("@");LOG.info(MODULE,"	- Mapping post message '%s' in '%s'",n[0],n[1]),m=require(h.dirname(require.main.filename)+"/"+n[1])[n[0]]}var o=j;"all"==o&&(o="get"),b.route(k)[o](SECURITY.secure(a),new i[j](a,l,m).service)}}};exports.config=function(a){LOG.info(MODULE,"Configuring REST services");for(var b in ENTITIES){LOG.info(MODULE,"Mapping entity",b);var c=ENTITIES[b];new Mapper(c).map(a)}};